# Name of this GitHub Actions workflow.
name: Semgrep (text format)

on:
  # Scan changed files in PRs (diff-aware scanning):
  #pull_request: {}
  # Scan on-demand through GitHub Actions interface:
  workflow_dispatch: {}
  # Scan mainline branches and report all findings: 
  #push:
  #  branches: ["master", "main"]

jobs:
  semgrep:
    # User-definable name of this GitHub Actions job:
    name: semgrep/ci
    # If you are self-hosting, change the following `runs-on` value: 
    runs-on: ubuntu-latest
    container:
      # A Docker image with Semgrep installed. Do not change this.
      image: returntocorp/semgrep

    # Skip any PR created by dependabot to avoid permission issues:
    if: (github.actor != 'dependabot[bot]')

    steps:
      # Fetch project source with GitHub Actions Checkout.
      - uses: actions/checkout@v3
      # Run the "semgrep ci" command on the command line of the docker image.
      - run: semgrep --verbose --no-force-color --include='*.java' --metrics='off' --severity='WARNING' --severity='ERROR' -o semgrep_results.txt
      - run: semgrep --verbose --no-force-color --include='*.java' --metrics='off' --severity='WARNING' --severity='ERROR' -o semgrep_results.sarif --sarif
        env:
           # Add the rules that Semgrep uses by setting the SEMGREP_RULES environment variable. 
           SEMGREP_RULES:  >
            r/contrib.owasp.java
            r/generic
            p/java
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Semgrep Output
          path: semgrep_results.*
      - name: Upload SARIF file for GitHub Advanced Security Dashboard
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: semgrep_results.sarif
        if: always()